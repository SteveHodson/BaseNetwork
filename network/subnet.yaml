---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Builds the subnets for a given subnet type [public, private or persistence].
  * Subnets
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Internal Id of an existing VPC
  EnvName:
    Description: Name of the environment, used for tagging resources
    Type: String
  ZonesRequired:
    Description: Number of Zones available for AWS::Region
    Type: Number
  SubnetType:
    Description: Type of subnet being built
    Type: String
    AllowedValues: 
      - public
      - private
      - persistence
  VpcCidrBlock:
    Description: CIDR block for this private network
    AllowedPattern: '([0-9]{1,3}\.){3}[0-9]{1,3}(\/(1[6-9]|2[0-8]))'
    Type: String
  SubnetCidrBlocks:
    Description: List of CIDR blocks for the subnet type
    Type: CommaDelimitedList

Conditions:
  TwoZoneResource: 
    !Or
    - !Equals [ !Ref ZonesRequired, 2 ]
    - !Equals [ !Ref ZonesRequired, 3 ]
    - !Equals [ !Ref ZonesRequired, 4 ]
  ThreeZoneResource: 
    !Or
    - !Equals [ !Ref ZonesRequired, 3 ]
    - !Equals [ !Ref ZonesRequired, 4 ]
  FourZoneResource: 
    !Equals [ !Ref ZonesRequired, 4 ]

Resources:
  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VpcId
      AvailabilityZone:
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      CidrBlock: !Select [1, !Ref SubnetCidrBlocks]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${EnvName}:sn-${SubnetType}-a
  SubnetB:
    Type: AWS::EC2::Subnet
    Condition: TwoZoneResource
    Properties:
      VpcId: !Ref VpcId
      AvailabilityZone:
        Fn::Select: 
          - 1
          - Fn::GetAZs: ""
      CidrBlock: !Select [2, !Ref SubnetCidrBlocks]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${EnvName}:sn-${SubnetType}-b
  SubnetC:
    Type: AWS::EC2::Subnet
    Condition: ThreeZoneResource
    Properties:
      VpcId: !Ref VpcId
      AvailabilityZone:
        Fn::Select: 
          - 2
          - Fn::GetAZs: ""
      CidrBlock: !Select [3, !Ref SubnetCidrBlocks]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${EnvName}:sn-${SubnetType}-c
  SubnetD:
    Type: AWS::EC2::Subnet
    Condition: FourZoneResource
    Properties:
      VpcId: !Ref VpcId
      AvailabilityZone:
        Fn::Select: 
          - 3
          - Fn::GetAZs: ""
      CidrBlock: !Select [4, !Ref SubnetCidrBlocks]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub ${EnvName}:sn-${SubnetType}-d
  SubnetAFlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${EnvName}_flowlogs_role
      LogGroupName: !Sub ${EnvName}-flowlogs
      ResourceId: !Ref SubnetA
      ResourceType: Subnet
      TrafficType: REJECT
  SubnetBFlowLog:
    Type: AWS::EC2::FlowLog
    Properties:
      DeliverLogsPermissionArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${EnvName}_flowlogs_role
      LogGroupName: !Sub ${EnvName}-flowlogs
      ResourceId: !Ref SubnetB
      ResourceType: Subnet
      TrafficType: REJECT
  SubnetCFlowLog:
    Type: AWS::EC2::FlowLog
    Condition: ThreeZoneResource
    Properties:
      DeliverLogsPermissionArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${EnvName}_flowlogs_role
      LogGroupName: !Sub ${EnvName}-flowlogs
      ResourceId: !Ref SubnetC
      ResourceType: Subnet
      TrafficType: REJECT
  SubnetDFlowLog:
    Type: AWS::EC2::FlowLog
    Condition: FourZoneResource
    Properties:
      DeliverLogsPermissionArn: !Sub arn:aws:iam::${AWS::AccountId}:role/${EnvName}_flowlogs_role
      LogGroupName: !Sub ${EnvName}-flowlogs
      ResourceId: !Ref SubnetD
      ResourceType: Subnet
      TrafficType: REJECT

Outputs:
  SubnetA:
    Description: Subnet reference for SubnetA
    Value: !Ref SubnetA
    Export:
      Name: !Sub ${EnvName}:sn-${SubnetType}-a:id
  SubnetB:
    Condition: TwoZoneResource
    Description: Subnet reference for SubnetB
    Value: !Ref SubnetB
    Export:
      Name: !Sub ${EnvName}:sn-${SubnetType}-b:id
  SubnetC:
    Condition: ThreeZoneResource
    Description: Subnet reference for SubnetC
    Value: !Ref SubnetC
    Export:
      Name: !Sub ${EnvName}:sn-${SubnetType}-c:id
  SubnetD:
    Condition: FourZoneResource
    Description: Subnet reference for SubnetD
    Value: !Ref SubnetD
    Export:
      Name: !Sub ${EnvName}:sn-${SubnetType}-d:id
  NetworkLayerCidr1:
    Description: The Cidr Block for the current tier
    Value: !Join
    - ","
    - !Ref SubnetCidrBlocks
    Export:
      Name: !Sub ${EnvName}:sn-${SubnetType}:list