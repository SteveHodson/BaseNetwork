---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Builds the public route table and a small set of basic routes which will be added to as the cloud solution takes shape.
  * Route Table
  * Route Table Associations with pre-existing subnets
  * Public Route to Internet Gateway

Parameters:
  VpcId:
    Description: ID of the VPC
    Type: AWS::EC2::VPC::Id
  EnvName:
    Description: Name of the environment and will be used for tagging resources
    Type: String
  ZonesRequired:
    Description: Number of Zones required
    Default: 1
    MinValue: 1
    MaxValue: 3
    Type: String

Conditions:
  TwoZoneResource: 
    !Or
      - !Equals [ !Ref ZonesRequired, 2 ]
      - !Equals [ !Ref ZonesRequired, 3 ]
      - !Equals [ !Ref ZonesRequired, 4 ]
  ThreeZoneResource: 
    !Or
      - !Equals [ !Ref ZonesRequired, 3 ]
      - !Equals [ !Ref ZonesRequired, 4 ] 
  FourZoneResource: 
    !Equals [ !Ref ZonesRequired, 4 ]

Resources:
# Route tables with associations
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: !Sub ${EnvName}:rt-public
  AttachSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-public-a:id"
      RouteTableId: !Ref PublicRouteTable
  AttachSubnetB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: TwoZoneResource
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-public-b:id"
      RouteTableId: !Ref PublicRouteTable
  AttachPublicSubnetC:
    Condition: ThreeZoneResource
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-public-c:id"
      RouteTableId: !Ref PublicRouteTable
  AttachPublicSubnetD:
    Condition: FourZoneResource
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-public-d:id"
      RouteTableId: !Ref PublicRouteTable

# Routes
  InternetAccess:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable
      GatewayId:
        Fn::ImportValue:
          !Sub "${EnvName}:igw:id"

Outputs:
  PublicRouteTable:
    Value: !Ref PublicRouteTable
    Description: A reference to the Public RouteTable 
    Export:
      Name: !Sub ${EnvName}:rt-public:id
