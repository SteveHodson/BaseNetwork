---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Builds the route tables and a small set of basic routes which will be added to as the cloud solution takes shape.
  * Route Tables
  * Route Table Associations with pre-existing subnets
  * Public Route to Internet Gateway

Parameters:
  VpcId:
    Description: ID of the VPC
    Type: AWS::EC2::VPC::Id
  EnvName:
    Description: Name of the environment and will be used for tagging resources
    Type: String
  ZonesRequired:
    Description: Number of Zones required
    Default: 1
    MinValue: 1
    MaxValue: 3
    Type: String
  # NetworkLayers:
  #   Description: Number of layers to be used.
  #   MaxValue: 3
  #   MinValue: 1
  #   Default: 2
  #   ConstraintDescription: Must be a number between 1 and 3 inclusive.
  #   Type: Number
  EnvType:
    Description: Type of env, used to find the associated subnets
    AllowedValues: 
      - public
      - private
      - persistence
    ConstraintDescription: Must be either public, private or persistence.
    Default: public
    Type: String  

Conditions:
  TwoZoneResource: 
    !Or [ !Equals [ !Ref ZonesRequired, 2 ], !Equals [ !Ref ZonesRequired, 3 ] ]
  ThreeZoneResource: 
    !Equals [ !Ref ZonesRequired, 3 ]

Resources:
# Route tables with associations
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: !Sub ${EnvName}:rt-${EnvType}
  AttachSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-${EnvType}-a:id"
      RouteTableId: !Ref PublicRouteTable
  AttachSubnetB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: TwoZoneResource
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-${EnvType}-b:id"
      RouteTableId: !Ref PublicRouteTable
  AttachSubnetC:
    Condition: ThreeZoneResource
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-${EnvType}-c:id"
      RouteTableId: !Ref PublicRouteTable

#   PrivateRouteTableA:
#     Condition: TwoLayerResource
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VpcId
#       Tags:
#       - Key: Name
#         Value: !Sub ${EnvName}:rt-private-a
#   AttachPrivateSubnetA:
#     Condition: TwoLayerResource
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       SubnetId:
#         Fn::ImportValue:
#           !Sub "${EnvName}:sn-private-a:id"
#       RouteTableId: !Ref PrivateRouteTableA

#   PrivateRouteTableB:
#     Condition: [TwoLayerResource, TwoZoneResource]
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VpcId
#       Tags:
#       - Key: Name
#         Value: !Sub ${EnvName}:rt-private-b
#   AttachPrivateSubnetB:
#     Condition: [TwoLayerResource, TwoZoneResource]
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       SubnetId:
#         Fn::ImportValue:
#           !Sub "${EnvName}:sn-private-b:id"
#       RouteTableId: !Ref PrivateRouteTableB
  
#   PrivateRouteTableC:
#     Condition: [TwoLayerResource, ThreeZoneResource]
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VpcId
#       Tags:
#       - Key: Name
#         Value: !Sub ${EnvName}:rt-private-c
#   AttachPrivateSubnetC:
#     Condition: [TwoLayerResource, ThreeZoneResource]
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       SubnetId:
#         Fn::ImportValue:
#           !Sub "${EnvName}:sn-private-c:id"
#       RouteTableId: !Ref PrivateRouteTableC

#   PersistenceRouteTableA:
#     Condition: ThreeLayerResource
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VpcId
#       Tags:
#       - Key: Name
#         Value: !Sub ${EnvName}:rt-persistence-a
#   AttachPersistenceSubnetA:
#     Condition: ThreeLayerResource
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       SubnetId:
#         Fn::ImportValue:
#           !Sub "${EnvName}:sn-persistence-a:id"
#       RouteTableId: !Ref PersistenceRouteTableA

#   PersistenceRouteTableB:
#     Condition: [ThreeLayerResource, TwoZoneResource]
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VpcId
#       Tags:
#       - Key: Name
#         Value: !Sub ${EnvName}:rt-persistence-b
#   AttachPersistenceSubnetB:
#     Condition: [ThreeLayerResource, TwoZoneResource]
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       SubnetId:
#         Fn::ImportValue:
#           !Sub "${EnvName}:sn-persistence-b:id"
#       RouteTableId: !Ref PersistenceRouteTableB

#   PersistenceRouteTableC:
#     Condition: [ThreeLayerResource, ThreeZoneResource]
#     Type: AWS::EC2::RouteTable
#     Properties:
#       VpcId: !Ref VpcId
#       Tags:
#       - Key: Name
#         Value: !Sub ${EnvName}:rt-persistence-c
#   AttachPersistenceSubnetC:
#     Condition: [ThreeLayerResource, ThreeZoneResource]
#     Type: AWS::EC2::SubnetRouteTableAssociation
#     Properties:
#       SubnetId:
#         Fn::ImportValue:
#           !Sub "${EnvName}:sn-persistence-c:id"
#       RouteTableId: !Ref PersistenceRouteTableC

# # Routes
#   InternetAccess:
#     Condition: PublicTypeTable
#     Type: AWS::EC2::Route
#     Properties:
#       DestinationCidrBlock: 0.0.0.0/0
#       RouteTableId: !Ref PublicRouteTable
#       GatewayId:
#         Fn::ImportValue:
#           !Sub "${EnvName}:igw:id"

# Outputs:
#   PublicRouteTable:
#     Value: !Ref PublicRouteTable
#     Description: A reference to the Public RouteTable 
#     Export:
#       Name: !Sub ${EnvName}:rt-public:id

#   PrivateRouteTableA:
#     Value: !Ref PrivateRouteTableA
#     Description: A reference to the Private RouteTableA
#     Export:
#       Name: !Sub ${EnvName}:rt-private-a:id 
#   PrivateRouteTableB:
#     Condition: TwoZoneResource
#     Value: !Ref PrivateRouteTableB
#     Description: A reference to the Private RouteTableB
#     Export:
#       Name: !Sub ${EnvName}:rt-private-b:id
#   PrivateRouteTableC:
#     Condition: ThreeZoneResource
#     Value: !Ref PrivateRouteTableC
#     Description: A reference to the Private RouteTableC
#     Export:
#       Name: !Sub ${EnvName}:rt-private-c:id 

#   PersistenceRouteTableA:
#     Value: !Ref PersistenceRouteTableA
#     Description: A reference to the Persistence RouteTableA
#     Export:
#       Name: !Sub ${EnvName}:rt-persistence-a:id
#   PersistenceRouteTableB:
#     Condition: TwoZoneResource
#     Value: !Ref PersistenceRouteTableB
#     Description: A reference to the Persistence RouteTableB
#     Export:
#       Name: !Sub ${EnvName}:rt-persistence-b:id
#   PersistenceRouteTableC:
#     Condition: ThreeZoneResource
#     Value: !Ref PersistenceRouteTableC
#     Description: A reference to the Persistence RouteTableC
#     Export:
#       Name: !Sub ${EnvName}:rt-persistence-c:id
