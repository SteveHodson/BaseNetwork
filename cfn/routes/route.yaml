---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Builds the route tables and a small set of basic routes which will be added to as the cloud solution takes shape.
  * Route Tables
  * Route Table Associations with pre-existing subnets

Parameters:
  VpcId:
    Description: ID of the VPC
    Type: AWS::EC2::VPC::Id
  EnvName:
    Description: Name of the environment and will be used for tagging resources
    Type: String
  ZonesRequired:
    Description: Number of Zones required
    Default: 1
    MinValue: 1
    MaxValue: 3
    Type: String
  EnvType:
    Description: Type of env, used to find the associated subnets
    AllowedValues: 
      - public
      - private
      - persistence
    ConstraintDescription: Must be either public, private or persistence.
    Default: public
    Type: String  

Conditions:
  TwoZoneResource: 
    !Or
      - !Equals [ !Ref ZonesRequired, 2 ]
      - !Equals [ !Ref ZonesRequired, 3 ]
      - !Equals [ !Ref ZonesRequired, 4 ]
  ThreeZoneResource: 
    !Or
      - !Equals [ !Ref ZonesRequired, 3 ]
      - !Equals [ !Ref ZonesRequired, 4 ] 
  FourZoneResource: 
    !Equals [ !Ref ZonesRequired, 4 ]

Resources:
  RouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: !Sub ${EnvName}:rt-${EnvType}-a
  AttachSubnetA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-${EnvType}-a:id"
      RouteTableId: !Ref RouteTableA

  RouteTableB:
    Type: AWS::EC2::RouteTable
    Condition: TwoZoneResource
    Properties:
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: !Sub ${EnvName}:rt-${EnvType}-b
  AttachSubnetB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: TwoZoneResource
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-${EnvType}-b:id"
      RouteTableId: !Ref RouteTableB
  
  RouteTableC:
    Type: AWS::EC2::RouteTable
    Condition: ThreeZoneResource
    Properties:
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: !Sub ${EnvName}:rt-${EnvType}-c
  AttachSubnetC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: ThreeZoneResource
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-${EnvType}-c:id"
      RouteTableId: !Ref RouteTableC
  RouteTableD:
    Type: AWS::EC2::RouteTable
    Condition: FourZoneResource
    Properties:
      VpcId: !Ref VpcId
      Tags:
      - Key: Name
        Value: !Sub ${EnvName}:rt-${EnvType}-d
  AttachSubnetD:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: FourZoneResource
    Properties:
      SubnetId:
        Fn::ImportValue:
          !Sub "${EnvName}:sn-${EnvType}-d:id"
      RouteTableId: !Ref RouteTableD

Outputs:
  RouteTableA:
    Value: !Ref RouteTableA
    Description: A reference to the RouteTableA
    Export:
      Name: !Sub ${EnvName}:rt-${EnvType}-a:id 
  RouteTableB:
    Condition: TwoZoneResource
    Value: !Ref RouteTableB
    Description: A reference to the RouteTableB
    Export:
      Name: !Sub ${EnvName}:rt-${EnvType}-b:id
  RouteTableC:
    Condition: ThreeZoneResource
    Value: !Ref RouteTableC
    Description: A reference to the RouteTableC
    Export:
      Name: !Sub ${EnvName}:rt-${EnvType}-c:id 
  RouteTableD:
    Condition: FourZoneResource
    Value: !Ref RouteTableD
    Description: A reference to the RouteTableD
    Export:
      Name: !Sub ${EnvName}:rt-${EnvType}-d:id 
