---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Builds all the subnets for an existing VPC across 1, 2, 3 or 4 AZs.  
  It uses a pre-existing lambda function to calculate the subnet cidr blocks.
  * Custom Resource
  * Nested Stacks each calling subnet.yaml
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Internal Id of an existing VPC
  EnvName:
    Description: Name of the environment, used for tagging resources
    Type: String
  VpcCidrBlock:
    Description: CIDR block for this private network
    AllowedPattern: '([0-9]{1,3}\.){3}[0-9]{1,3}(\/(1[6-9]|2[0-8]))'
    Type: String
  NetworkLayers:
    Description: Number of layers to be used.
    MaxValue: 3
    MinValue: 1
    Default: 2
    ConstraintDescription: Must be a number between 1 and 3 inclusive.
    Type: Number
  ZonesRequired:
    Description: Availability Zones to spread the VPC across.
    MaxValue: 4
    MinValue: 1
    Default: 2
    ConstraintDescription: Must be a number between 1 and 4 inclusive.
    Type: Number
  VpcType:
    Description: Determine a public or private VPC
    AllowedValues: 
      - public
      - private
    ConstraintDescription: Must be either public or private.
    Default: public
    Type: String

Mappings: 
  VpcStructure: 
    private: 
      "1": ["private"]
      "2": ["private","persistence"]
      "3": ["private","public","persistence"]
    public: 
      "1": ["public"]
      "2": ["private","public"]
      "3": ["private","public","persistence"]

Conditions:
  TwoLayerResource: 
    !Or
    - !Equals [ !Ref NetworkLayers, 2 ]
    - !Equals [ !Ref NetworkLayers, 3 ]
  ThreeLayerResource: 
    !Equals [ !Ref NetworkLayers, 3 ]


Resources:
  CidrBlockCalculation:
    Type: Custom::SubnetCidrCalculator
    Properties:
      ServiceToken:  !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:SubnetCidrCalculator
      VpcCidrBlock:  !Ref VpcCidrBlock
      NetworkLayers: !Ref NetworkLayers
      ZonesRequired: !Ref ZonesRequired

  NetworkLayer1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: subnet.yaml
      TimeoutInMinutes: 5
      Parameters:
        VpcId:            !Ref VpcId
        EnvName:          !Ref EnvName
        SubnetType:       !Select 
        - 0
        - Fn::FindInMap: [VpcStructure, !Ref VpcType, !Ref NetworkLayers]
        ZonesRequired:    !Ref ZonesRequired
        SubnetCidrBlocks: !GetAtt CidrBlockCalculation.NetworkLayer1

  NetworkLayer2:
    Type: AWS::CloudFormation::Stack
    Condition: TwoLayerResource
    Properties:
      TemplateURL: subnet.yaml
      TimeoutInMinutes: 5
      Parameters:
        VpcId:            !Ref VpcId
        EnvName:          !Ref EnvName
        SubnetType:       !Select
        - 1
        - Fn::FindInMap: [VpcStructure, !Ref VpcType, !Ref NetworkLayers]
        ZonesRequired:    !Ref ZonesRequired
        SubnetCidrBlocks: !GetAtt CidrBlockCalculation.NetworkLayer2

  NetworkLayer3:
    Type: AWS::CloudFormation::Stack
    Condition: ThreeLayerResource
    Properties:
      TemplateURL: subnet.yaml
      TimeoutInMinutes: 5
      Parameters:
        VpcId:            !Ref VpcId
        EnvName:          !Ref EnvName
        SubnetType:       !Select
        - 2
        - Fn::FindInMap: [VpcStructure, !Ref VpcType, !Ref NetworkLayers]
        ZonesRequired:    !Ref ZonesRequired
        SubnetCidrBlocks: !GetAtt CidrBlockCalculation.NetworkLayer3
