---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Standard VPC Network.
Parameters:
  EnvName:
    Description: Name of the environment, used for tagging resources
    Type: String
  VpcCidrBlock:
    Description: CIDR block for this private network.
    AllowedPattern: '([0-9]{1,3}\.){3}[0-9]{1,3}(\/(1[6-9]|2[0-8]))'
    Type: String
  NetworkLayers:
    Description: Number of layers to be used.
    MaxValue: 3
    MinValue: 1
    Default: 2
    ConstraintDescription: Must be a number between 1 and 3 inclusive.
    Type: Number
  ZonesRequired:
    Description: Availability Zones to spread the VPC across.
    MaxValue: 4
    MinValue: 1
    Default: 2
    ConstraintDescription: Must be a number between 1 and 4 inclusive.
    Type: Number
  VpcType:
    Description: Determine whether to create a publicly facing VPC
    AllowedValues: 
      - public
      - private
    ConstraintDescription: Must be either public or private.
    Default: public
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Define your environment
      Parameters:
      - EnvName
      - VpcCidrBlock
      - NetworkLayers
      - ZonesRequired
      - VpcType

Resources:
  # Delegate creation of VPC to sub-stack
  VpcSubStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: network/vpc.yaml
      TimeoutInMinutes: 5
      Parameters:
        EnvName:       !Ref EnvName
        VpcCidrBlock:  !Ref VpcCidrBlock
        VpcType:       !Ref VpcType
        NetworkLayers: !Ref NetworkLayers
  
  # Delegate creation of VPC to sub-stack
  SubnetSubStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: network/subnets.yaml
      TimeoutInMinutes: 5
      Parameters:
        VpcId:         !GetAtt VpcSubStack.Outputs.VpcId
        EnvName:       !Ref EnvName
        VpcCidrBlock:  !Ref VpcCidrBlock
        NetworkLayers: !Ref NetworkLayers
        ZonesRequired: !Ref ZonesRequired
        VpcType:       !Ref VpcType
  
  # Delegate creation of Routes to sub-Stack
  # RoutesSubStack:
  #   DependsOn: SubnetSubStack
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: routes/route-public.yaml
  #     TimeoutInMinutes: 5
  #     Parameters:
  #       VpcId: !GetAtt VpcSubStack.Outputs.VpcId
  #       EnvName: !Ref EnvName
  #       ZonesRequired: !GetAtt SubnetSubStack.Outputs.ZonesAvailable
  # Delegate creation of ACLs to sub-Stack
  # AclSubStack:
  #   DependsOn: SubnetSubStack
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: acls/acls.yaml
  #     TimeoutInMinutes: 5
  #     Parameters:
  #       VpcId: !GetAtt VpcSubStack.Outputs.VpcId
  #       EnvName: !Ref EnvName
  #       ZonesRequired: !GetAtt SubnetSubStack.Outputs.ZonesAvailable
  
  # Delegate creation of ACL Rules to sub-Stack
  # NatGatewaySubStack:
  #   DependsOn: RoutesSubStack
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: nat/nat.yaml
  #     TimeoutInMinutes: 5
  #     Parameters:
  #       EnvName: !Ref EnvName
  #       ZonesRequired: !GetAtt SubnetSubStack.Outputs.ZonesAvailable
